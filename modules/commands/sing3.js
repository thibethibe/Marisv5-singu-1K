const fs = require('fs');
const ytdl = require('ytdl-core');
const { resolve } = require('path');
async function downloadMusicFromYoutube(link, path) {
  var timestart = Date.now();
  if(!link) return 'Thi·∫øu link'
  var resolveFunc = function () { };
  var rejectFunc = function () { };
  var returnPromise = new Promise(function (resolve, reject) {
    resolveFunc = resolve;
    rejectFunc = reject;
  });
    ytdl(link, {
            filter: format =>
                format.quality == 'tiny' && format.audioBitrate == 48 && format.hasAudio == true
        }).pipe(fs.createWriteStream(path))
        .on("close", async () => {
            var data = await ytdl.getInfo(link)
            var result = {
                title: data.videoDetails.title,
                dur: Number(data.videoDetails.lengthSeconds),
              publishDate:
data.videoDetails.publishDate,                    
                viewCount: data.videoDetails.viewCount,
                likes: data.videoDetails.likes,
                author: data.videoDetails.author.name,
                timestart: timestart
            }
            resolveFunc(result)
        })
  return returnPromise
}
module.exports.config = {
    name: "sing3",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "SINGU-üíåüíå",
    description: "Ph√°t nh·∫°c th√¥ng qua link YouTube ho·∫∑c t·ª´ kho√° t√¨m ki·∫øm",
    commandCategory: "ti·ªán √≠ch",
    usages: "[searchMusic]",
    cooldowns: 0
};

module.exports.handleReply = async function ({ api, event, handleReply }) {
    const axios = require('axios')
    const { createReadStream, unlinkSync, statSync } = require("fs-extra")
    try {
        var path = `${__dirname}/cache/1.mp3`
        var data = await downloadMusicFromYoutube('https://www.youtube.com/watch?v=' + handleReply.link[event.body -1], path);
        if (fs.statSync(path).size > 26214400) return api.sendMessage('Kh√¥ng th·ªÉ g·ª≠i file v√¨ dung l∆∞·ª£ng l·ªõn h∆°n 25MB.', event.threadID, () => fs.unlinkSync(path), event.messageID);
        api.unsendMessage(handleReply.messageID)
        return api.sendMessage({ 
		body: `====„Äé ùó†ùó®ùó¶ùóúùóñ „Äè====
[üéº] ‚û† ùêìùê¢ùê≠ùê•ùêû: ${data.title}\n[üì∫] ‚û† ùêìùêûÃÇùêß ùê§ùêûÃÇùêßùê°: ${data.author}\n[‚è∞] ‚û† ùêìùê°ùê®ÃõÃÄùê¢ ùê†ùê¢ùêöùêß: ${this.convertHMS(data.dur)}\n[üëÄ] ‚û† ùêãùêÆÃõùê®ÃõÃ£ùê≠ ùê±ùêûùê¶: ${data.viewCount}\n[üíû] ‚û† ùêãùêÆÃõùê®ÃõÃ£ùê≠ ùê≠ùê°ùê¢ÃÅùêúùê°: ${data.likes}\n ùó°ùó¥ùóÆÃÄùòÜ ùòÅùóÆÃâùó∂ ùóπùó≤ÃÇùóª: ${data.publishDate}\n[‚è≥] ‚û† ùêìùê°ùê®ÃõÃÄùê¢ ùê†ùê¢ùêöùêß ùê±ùêÆÃõÃâ ùê•ùê≤ÃÅ: ${Math.floor((Date.now()- data.timestart)/1000)} gi√¢y\nüì∫====„Äé ùó†ùó®ùó¶ùóúùóñ „Äè====üì∫`,
            attachment: fs.createReadStream(path)}, event.threadID, ()=> fs.unlinkSync(path), 
         event.messageID)
            
    }
    catch (e) { return console.log(e) }
}
module.exports.convertHMS = function(value) {
    const sec = parseInt(value, 10); 
    let hours   = Math.floor(sec / 3600);
    let minutes = Math.floor((sec - (hours * 3600)) / 60); 
    let seconds = sec - (hours * 3600) - (minutes * 60); 
    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    return (hours != '00' ? hours +':': '') + minutes+':'+seconds;
}
module.exports.run = async function ({ api, event, args }) {
    if (args.length == 0 || !args) return api.sendMessage('¬ª Ph·∫ßn t√¨m ki·∫øm kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!', event.threadID, event.messageID);
    const keywordSearch = args.join(" ");
    var path = `${__dirname}/cache/1.mp3`
    if (fs.existsSync(path)) { 
        fs.unlinkSync(path)
    }
    if (args.join(" ").indexOf("https://") == 0) {
        try {
            var data = await downloadMusicFromYoutube(args.join(" "), path);
            if (fs.statSync(path).size > 26214400) return api.sendMessage('Kh√¥ng th·ªÉ g·ª≠i file v√¨ dung l∆∞·ª£ng l·ªõn h∆°n 25MB.', event.threadID, () => fs.unlinkSync(path), event.messageID);
            return api.sendMessage({ 
                body: `‚û†Title: ${data.title}\n‚û†Name K√™nh: ${data.author}\n‚û†Th·ªùi gian: ${this.convertHMS(data.dur)}\n‚û†L∆∞·ª£t xem: ${data.viewCount}\n‚û†L∆∞·ª£t th√≠ch: ${data.likes}\n‚û†Th·ªùi gian x·ª≠ l√Ω: ${Math.floor((Date.now()- data.timestart)/1000)} gi√¢y\nüíø====DISME PROJECT====üíø`,
                attachment: fs.createReadStream(path)}, event.threadID, ()=> fs.unlinkSync(path), 
            event.messageID)
            
        }
        catch (e) { return console.log(e) }
    } else {
          try {
            var link = [],
                msg = "",
                num = 0
            const Youtube = require('youtube-search-api');
            var data = (await Youtube.GetListByKeyword(keywordSearch, false,6)).items;
            for (let value of data) {
              link.push(value.id);
              num = num+=1
              msg += (`${num} - ${value.title} (${value.length.simpleText})\n\n`);
            }
            var body = `¬ªüîé ùóñùóºÃÅ ${link.length} ùó∏ùó≤ÃÇÃÅùòÅ ùóæùòÇùóÆÃâ ùòÅùóøùòÇÃÄùóªùó¥ ùòÉùóºÃõÃÅùó∂ ùòÅùòÇÃõÃÄ ùó∏ùóµùóºùóÆÃÅ ùòÅùó∂ÃÄùó∫ ùó∏ùó∂ùó≤ÃÇÃÅùó∫ ùó∞ùòÇÃâùóÆ ùóØùóÆÃ£ùóª:\n\n${msg}¬ª ùóõùóÆÃÉùòÜ ùóøùó≤ùóΩùóπùòÜ(ùóΩùóµùóÆÃâùóª ùóµùóºÃÇÃÄùó∂) ùó∞ùóµùóºÃ£ùóª ùó∫ùóºÃ£ÃÇùòÅ ùòÅùóøùóºùóªùó¥ ùóªùóµùòÇÃõÃÉùóªùó¥ ùòÅùó∂ÃÄùó∫ ùó∏ùó∂ùó≤ÃÇÃÅùó∫ ùòÅùóøùó≤ÃÇùóª`
            return api.sendMessage({
              body: body
            }, event.threadID, (error, info) => global.client.handleReply.push({
              type: 'reply',
              name: this.config.name,
              messageID: info.messageID,
              author: event.senderID,
              link
            }), event.messageID);
          } catch(e) {
            return api.sendMessage('ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i trong gi√¢y l√°t!!\n' + e, event.threadID, event.messageID);
        }
    }
                             } 