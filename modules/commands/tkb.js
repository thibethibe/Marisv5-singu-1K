let moment = require('moment-timezone');

let is_time_in_ranges = (time = moment.tz("Asia/Ho_Chi_Minh").format('HH:mm:ss'), range, format = 'HH:mm:ss')=>moment(time, format).isBetween(moment(range.start, format), moment(range.end, format));

module.exports.config = {
  name: "tkb",
  version: "1.1.1",
  hasPermssion: 0,
  credits: "SINGU-üíåüíå",
  description: "Th·ªùi kh√≥a bi·ªÉu",
  commandCategory: "L·ªánh Ri√™ng C·ªßa Qu·∫•t",
  usages: "/tkb",
  usePrefix: false,
  cooldowns: 3,
};

module.exports.run = async function({api, event, args}) {
  const axios = require("axios")
  const link = (url) => axios.get(url, { responseType: "stream", }).then((r) => r.data);
  if (args[0] == 'ch√≠nh') {
    return api.sendMessage({body: 'Th·ªùi Kh√≥a Bi·ªÉu',attachment: await link('https://i.imgur.com/x1UgEUs.png')},event.threadID)
  }
  var timeRanges = [
  { start: '00:00:00', end: '06:50:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'], text: 'Ngh·ªâ' },
  { start: '06:50:00', end: '07:00:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'], text: 'Truy B√†i' },
  { start: '07:45:00', end: '07:50:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'], text: 'Chuy·ªÉn Ti·∫øt' },
  { start: '08:35:00', end: '08:55:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'], text: 'Ra Ch∆°i' },
  { start: '09:40:00', end: '09:45:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'], text: 'Chuy·ªÉn Ti·∫øt' },
  { start: '10:30:00', end: '13:25:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday'], text: 'Ngh·ªâ' },
  { start: '13:25:00', end: '13:30:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday'], text: 'Truy B√†i' },
  { start: '16:50:00', end: '23:59:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday'], text: 'Ngh·ªâ' },
  { start: '11:25:00', end: '23:59:59', day: 'Saturday', text: 'Ngh·ªâ' },
  { start: '10:30:00', end: '10:40:00', day: 'Saturday', text: 'Ra Ch∆°i' },
  { start: '15:00:00', end: '15:20:00', day: ['Monday','Tuesday','Wednesday','Thursday','Friday'], text: 'Ra Ch∆°i' },
  //Th·ª© 2
  { start: '07:00:00', end: '07:45:00', day: 'Monday', text: 'Ch√†o C·ªù' },
  { start: '07:50:00', end: '08:35:00', day: 'Monday', text: 'Sinh Ho·∫°t L·ªõp' },
  { start: '08:55:00', end: '09:40:00', day: 'Monday', text: 'H√≥a H·ªçc' },
  { start: '09:45:00', end: '10:30:00', day: 'Monday', text: 'C√¥ng Ngh·ªá' },
  { start: '13:30:00', end: '14:15:00', day: 'Monday', text: 'V·∫≠t L√Ω' },
  { start: '14:15:00', end: '15:00:00', day: 'Monday', text: 'Qu·ªëc Ph√≤ng' },
  { start: '15:20:00', end: '16:05:00', day: 'Monday', text: 'To√°n' },
  { start: '16:05:00', end: '16:50:00', day: 'Monday', text: 'H∆∞·ªõng Nghi·ªáp' },
  //Th·ª© 3
  { start: '07:00:00', end: '07:45:00', day: 'Tuesday', text: 'L·ªãch S·ª≠' },
  { start: '07:50:00', end: '08:35:00', day: 'Tuesday', text: 'L·ªãch S·ª≠' },
  { start: '08:55:00', end: '09:40:00', day: 'Tuesday', text: 'Ti·∫øng Anh' },
  { start: '09:45:00', end: '10:30:00', day: 'Tuesday', text: 'Ti·∫øng Anh' },
  { start: '13:30:00', end: '14:15:00', day: 'Tuesday', text: 'Ng·ªØ VƒÉn' },
  { start: '14:15:00', end: '15:00:00', day: 'Tuesday', text: 'Ng·ªØ VƒÉn' },
  { start: '15:20:00', end: '16:05:00', day: 'Tuesday', text: 'To√°n' },
  { start: '16:05:00', end: '16:50:00', day: 'Tuesday', text: 'To√°n' },
  //Th·ª© 4
  { start: '07:00:00', end: '07:45:00', day: 'Wednesday', text: 'To√°n' },
  { start: '07:50:00', end: '08:35:00', day: 'Wednesday', text: 'To√°n' },
  { start: '08:55:00', end: '09:40:00', day: 'Wednesday', text: 'Tin H·ªçc' },
  { start: '09:45:00', end: '10:30:00', day: 'Wednesday', text: 'Tin H·ªçc' },
  { start: '13:30:00', end: '14:15:00', day: 'Wednesday', text: 'Th·ªÉ D·ª•c' },
  { start: '14:15:00', end: '15:00:00', day: 'Wednesday', text: 'Th·ªÉ D·ª•c' },
  { start: '15:20:00', end: '16:05:00', day: 'Wednesday', text: 'To√°n' },
  { start: '16:05:00', end: '16:50:00', day: 'Wednesday', text: 'To√°n' },
  //Th·ª© 5
  { start: '07:00:00', end: '07:45:00', day: 'Thursday', text: 'C√¥ng D√¢n' },
  { start: '07:50:00', end: '08:35:00', day: 'Thursday', text: 'H√≥a H·ªçc' },
  { start: '08:55:00', end: '09:40:00', day: 'Thursday', text: 'Sinh H·ªçc' },
  { start: '09:45:00', end: '10:30:00', day: 'Thursday', text: 'V·∫≠t L√Ω' },
  { start: '13:30:00', end: '14:15:00', day: 'Thursday', text: 'C√¥ng D√¢n' },
  { start: '14:15:00', end: '15:00:00', day: 'Thursday', text: 'C√¥ng D√¢n' },
  { start: '15:20:00', end: '16:05:00', day: 'Thursday', text: 'L·ªãch S·ª≠' },
  { start: '16:05:00', end: '16:50:00', day: 'Thursday', text: 'L·ªãch S·ª≠' },
  //Th·ª© 6
  { start: '07:00:00', end: '07:45:00', day: 'Friday', text: 'Ti·∫øng Anh' },
  { start: '07:50:00', end: '08:35:00', day: 'Friday', text: 'Ti·∫øng Anh' },
  { start: '08:55:00', end: '09:40:00', day: 'Friday', text: 'Ng·ªØ VƒÉn' },
  { start: '09:45:00', end: '10:30:00', day: 'Friday', text: 'Ng·ªØ VƒÉn' },
  { start: '13:30:00', end: '14:15:00', day: 'Friday', text: 'ƒê·ªãa L√Ω' },
  { start: '14:15:00', end: '15:00:00', day: 'Friday', text: 'ƒê·ªãa L√Ω' },
  { start: '15:20:00', end: '16:05:00', day: 'Friday', text: 'Ti·∫øng Anh' },
  { start: '16:05:00', end: '16:50:00', day: 'Friday', text: 'Ti·∫øng Anh' },
  //Th·ª© 7
  { start: '07:00:00', end: '07:45:00', day: 'Saturday', text: 'To√°n' },
  { start: '07:50:00', end: '08:35:00', day: 'Saturday', text: 'To√°n' },
  { start: '08:55:00', end: '09:40:00', day: 'Saturday', text: 'ƒê·ªãa L√Ω' },
  { start: '09:45:00', end: '10:30:00', day: 'Saturday', text: 'ƒê·ªãa L√Ω' },
  { start: '10:40:00', end: '11:25:00', day: 'Saturday', text: 'Ng·ªØ VƒÉn' },
  //Ch·ªß Nh·∫≠t
  { start: '00:00:00', end: '23:59:59', day: 'Sunday', text: 'Ngh·ªâ' },
];
  var gio = moment.tz('Asia/Ho_Chi_Minh').format('HH:mm:ss');
  var dddd = moment.tz('Asia/Ho_Chi_Minh').format('dddd');
  var thu;
  if (dddd == 'Sunday') thu = 'Ch·ªß Nh·∫≠t'
  if (dddd == 'Monday') thu = 'Th·ª© Hai'
  if (dddd == 'Tuesday') thu = 'Th·ª© Ba'
  if (dddd == 'Wednesday') thu = 'Th·ª© T∆∞'
  if (dddd == 'Thursday') thu = 'Th·ª© NƒÉm'
  if (dddd == 'Friday') thu = 'Th·ª© S√°u'
  if (dddd == 'Saturday') thu = 'Th·ª© B·∫£y' 
  const time = moment.tz("Asia/Ho_Chi_Minh").format('HH:mm:ss');
  for (const range of timeRanges) for (let day of typeof range.day == 'string'?[range.day]:range.day)if (dddd == day && is_time_in_ranges(gio, range))api.sendMessage({body:`
‚û© Hi·ªán t·∫°i l√† ${thu} l√∫c ${gio}
‚û© Th·ªùi kh√≥a bi·ªÉu : ${range.text}
‚û© Trong kho·∫£ng : ${thu}, ${range.start} ƒë·∫øn ${range.end.replace('23:59:59','00:00:00')}`
  ,attachment: await link(
range.text == 'V·∫≠t L√Ω'       ? 'https://i.imgur.com/niKxegp.jpg' :
range.text == 'To√°n'         ? 'https://i.imgur.com/4l8lqqI.jpg' :
range.text == 'Ch√†o C·ªù'      ? 'https://i.imgur.com/UpgDqPO.jpg' :
range.text == 'Ra Ch∆°i'      ? 'https://i.imgur.com/aoAC4oU.jpg' :
range.text == 'Gi·∫£i Lao'     ? 'https://i.imgur.com/4t3Dgdb.jpg' :
range.text == 'Truy B√†i'     ? 'https://i.imgur.com/DYBcvCQ.jpg' :
range.text == 'Ng·ªØ VƒÉn'      ? 'https://i.imgur.com/fOAzlaN.jpg' :
range.text == 'Sinh Ho·∫°t'    ? 'https://i.imgur.com/wH6v7Bz.jpg' :
range.text == 'H√≥a H·ªçc'      ? 'https://i.imgur.com/MsXBuE0.jpg' :
range.text == 'C√¥ng Ngh·ªá'    ? 'https://i.imgur.com/kniutfc.jpg' :
range.text == 'H∆∞·ªõng Nghi·ªáp' ? 'https://i.imgur.com/FPdxR0D.jpg' :
range.text == 'Qu·ªëc Ph√≤ng'   ? 'https://i.imgur.com/FYaoC6T.jpg' :
range.text == 'L·ªãch S·ª≠'      ? 'https://i.imgur.com/6Hpavyw.jpg' :
range.text == 'Ti·∫øng Anh'    ? 'https://i.imgur.com/fvhyo8v.jpg' :
range.text == 'C√¥ng D√¢n'     ? 'https://i.imgur.com/KFGNMfz.jpg' :
range.text == 'ƒê·ªãa L√Ω'       ? 'https://i.imgur.com/LEDFoB5.jpg' :
range.text == 'Th·ªÉ D·ª•c'      ? 'https://i.imgur.com/tJd6RjC.jpg' :
range.text == 'Tin H·ªçc'      ? 'https://i.imgur.com/5QR1aYj.jpg' :
range.text == 'Sinh H·ªçc'     ? 'https://i.imgur.com/8Pj5sfY.jpg' :
                               'https://i.imgur.com/KSfXQgm.jpg')},event.threadID);
}