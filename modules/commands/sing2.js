const fs = require('fs');
const ytdl = require('ytdl-core');
const { resolve } = require('path');
const moment = require("moment-timezone");
  var gio = moment.tz("Asia/Ho_Chi_Minh").format("HH:mm:ss");
async function downloadMusicFromYoutube(link, path) {
  var timestart = Date.now();
  if(!link) return 'Thi·∫øu link'
  var resolveFunc = function () { };
  var rejectFunc = function () { };
  var returnPromise = new Promise(function (resolve, reject) {
    resolveFunc = resolve;
    rejectFunc = reject;
  });
    ytdl(link, {
            filter: format =>
                format.quality == 'tiny' && format.audioBitrate == 48 && format.hasAudio == true
        }).pipe(fs.createWriteStream(path))
        .on("close", async () => {
            var data = await ytdl.getInfo(link)
            var result = {
                title: data.videoDetails.title,
                dur: Number(data.videoDetails.lengthSeconds),
                viewCount: data.videoDetails.viewCount,
                likes: data.videoDetails.likes,
                dislike:
data.videoDetails.dislikes,
                author: data.videoDetails.author.name,
                timestart: timestart
            }
            resolveFunc(result)
        })
  return returnPromise
}
module.exports.config = {
    name: "sing2",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "D-Jukie",
    description: "Ph√°t nh·∫°c th√¥ng qua link YouTube ho·∫∑c t·ª´ kho√° t√¨m ki·∫øm",
    commandCategory: "Ph∆∞∆°ng ti·ªán",
    usages: "[searchMusic]",
    cooldowns: 0
}

module.exports.handleReply = async function ({ api, event, handleReply }) {
    const axios = require('axios')
    const { createReadStream, unlinkSync, statSync } = require("fs-extra")
    try {
        var path = `${__dirname}/cache/sing-${event.senderID}.m4a`
        var data = await downloadMusicFromYoutube('https://www.youtube.com/watch?v=' + handleReply.link[event.body -1], path);
        if (fs.statSync(path).size > 26214400) return api.sendMessage('ùóûùóµùóºÃÇùóªùó¥ ùòÅùóµùó≤ÃÇÃâ ùó¥ùòÇÃõÃâùó∂ ùó≥ùó∂ùóπùó≤. ùó©ùòÇùó∂ ùóπùóºÃÄùóªùó¥ ùó∞ùóµùóºÃ£ùóª ùóØùóÆÃÄùó∂ ùóµùóÆÃÅùòÅ ùó∏ùóµùóÆÃÅùó∞!', event.threadID, () => fs.unlinkSync(path), event.messageID);
        api.unsendMessage(handleReply.messageID)
        return api.sendMessage({ 
            body:`üé∂ ==== [ ùóîÃÇùó∫ ùó°ùóµùóÆÃ£ùó∞ü¶ñ ] ==== üé∂\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n‚ûù üì∫ùóïùóÆÃÄùó∂ ùóµùóÆÃÅùòÅ: ${data.title}\n‚ûù ‚è∞ùóßùó∂ùó∫ùó≤: ${this.convertHMS(data.dur)}\n[üåê]ùóüùòÇÃõùóºÃõÃ£ùòÅ ùòÖùó≤ùó∫: ${data.author}\n[üîç]ùóßùó≤ÃÇùóª ùó∏ùó≤ÃÇùóªùóµ: ${data.viewCount}\n‚ûù üëçùóüùòÇÃõùóºÃõÃ£ùòÅ ùòÅùóµùó∂ÃÅùó∞ùóµ: ${data.likes}\n‚ûù ‚è≥ùóßùóµùóºÃõÃÄùó∂ ùó¥ùó∂ùóÆùóª ùòÖùòÇÃõÃâ ùóπùó∂ÃÅ: ${Math.floor((Date.now()- data.timestart)/1000)}s\n‚ûù üì•ùóüùó∂ùóªùó∏ ùó±ùóºùòÑùóªùóπùóºùóÆùó±: https://www.y2meta.com/vi/youtube/${handleReply.link[event.body -1]}\n‚ûù üìÖùó°ùó¥ùóÆÃÄùòÜ ùòÅùóÆÃâùó∂ ùóπùó≤ÃÇùóª: ${data.publishDate}\n\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüé∂ ==== [ ùóßùóµùó≤ÃÇÃÅ ùóöùó∂ùóºÃõÃÅùó∂ ùóîÃÇùó∫ ùó°ùóµùóÆÃ£ùó∞ü¶ñ ] ==== üé∂`,
            attachment: fs.createReadStream(path)}, event.threadID, ()=> fs.unlinkSync(path), 
         event.messageID)
            
    }
    catch (e) { return console.log(e) }
}
module.exports.convertHMS = function(value) {
    const sec = parseInt(value, 10); 
    let hours   = Math.floor(sec / 3600);
    let minutes = Math.floor((sec - (hours * 3600)) / 60); 
    let seconds = sec - (hours * 3600) - (minutes * 60); 
    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    return (hours != '00' ? hours +':': '') + minutes+':'+seconds;
}
module.exports.run = async function ({ api, event, args }) {
  let axios = require('axios');
    if (args.length == 0 || !args) return api.sendMessage({body: '==== [ ùó¶ùóúùó°ùóö ùó†ùóòùó°ùó® ] ====‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nùü≠. ùó¶ùó∂ùóªùó¥ + ùòÅùó≤ÃÇùóª ùóØùóÆÃÄùó∂ ùóµùóÆÃÅùòÅ ùóØùóÆÃ£ùóª ùó∫ùòÇùóºÃÇÃÅùóª ùóªùó¥ùóµùó≤ (ùòÉùó±: /ùòÄùó∂ùóªùó¥ ùóöùó∂ùóºÃÅ)\nùüÆ. ùó¶ùó∂ùóªùó¥ + ùóπùó∂ùóªùó∏ ùòÉùó± ùòÜùòÅùóØ ùóªùóµùóÆÃ£ùó∞ ùóØùóÆÃ£ùóª ùó∫ùòÇùóºÃÇÃÅùóª ùóªùó¥ùóµùó≤ (ùòÉùó±: /ùòÄùó∂ùóªùó¥ ùóµùòÅùòÅùóΩùòÄ://ùòÜùóºùòÇùòÅùòÇ.ùóØùó≤/ùó∂ùóóùó´ùó•ùóûùóõùó¨ùü≥ùó∫ùóùùóî)\n[üíì] ‚Üí ùóïùóÆÃ£ùóª ùó∞ùòÇÃÉùóªùó¥ ùó∞ùóºÃÅ ùòÅùóµùó≤ÃÇÃâ ùòÄùóÆÃÄùó∂ ùòÄùó∂ùóªùó¥1 ùóµùóºùóÆÃ£ÃÜùó∞ ùòÄùó∂ùóªùó¥ùüØ\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚ö†Ô∏è ùóüùòÇÃõùòÇ ùòÜÃÅ: ùü≠ ùòÄùóºÃÇÃÅ ùóªùóµùóÆÃ£ùó∞ ùóØùóºùòÅ ùó∏ùóµùóºÃÇùóªùó¥ ùó¥ùòÇÃõÃâùó∂ ƒëùòÇÃõùóºÃõÃ£ùó∞ ùóπùóÆÃÄ ùó±ùóº ùóæùòÇùóÆÃÅ ùó±ùóÆÃÄùó∂', attachment: (await axios.get((await axios.get(`https://api.api-official.repl.co/vdgai`)).data.data, {
                    responseType: 'stream'
                })).data},
  event.threadID, event.messageID);
    const keywordSearch = args.join(" ");
    var path = `${__dirname}/cache/sing-${event.senderID}.m4a`
    if (fs.existsSync(path)) { 
        fs.unlinkSync(path)
    }
    if (args.join(" ").indexOf("https://") == 0) {
        try {
            var data = await downloadMusicFromYoutube(args.join(" "), path);
            if (fs.statSync(path).size > 2621440000) return api.sendMessage('[ ùóîÃÇùó∫ ùó°ùóµùóÆÃ£ùó∞ ] ‚ûù ùóûùóµùóºÃÇùóªùó¥ ùòÅùóµùó≤ÃÇÃâ ùó¥ùòÇÃõÃâùó∂ ùó≥ùó∂ùóπùó≤. ùó©ùòÇùó∂ ùóπùóºÃÄùóªùó¥ ùó∞ùóµùóºÃ£ùóª ùóØùóÆÃÄùó∂ ùóµùóÆÃÅùòÅ ùó∏ùóµùóÆÃÅùó∞!', event.threadID, () => fs.unlinkSync(path), event.messageID);
            return api.sendMessage({ 
                body: `üéß Music: ${data.title}\n‚è∞ Time: ${this.convertHMS(data.dur)}\nüë§ Channel: ${data.author}\nüëÄ Views: ${data.viewCount}\nüëç Likes: ${data.likes}\n‚è±Ô∏è Processing time: ${Math.floor((Date.now()- data.timestart)/1000)}s`,
                attachment: fs.createReadStream(path)}, event.threadID, ()=> fs.unlinkSync(path), 
            event.messageID)
            
        }
        catch (e) { return console.log(e) }
    } else {
          try {
            var link = [],
                msg = "",
                num = 0,
                numb = 0;
            var imgthumnail = []
            const Youtube = require('youtube-search-api');
            var data = (await Youtube.GetListByKeyword(keywordSearch, false,6)).items;
            for (let value of data) {
              link.push(value.id);
              let folderthumnail = __dirname + `/cache/${numb+=1}.png`;
                let linkthumnail = `https://img.youtube.com/vi/${value.id}/hqdefault.jpg`;
                let getthumnail = (await axios.get(`${linkthumnail}`, {
                    responseType: 'arraybuffer'
                })).data;
              let datac = (await axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${value.id}&key=AIzaSyANZ2iLlzjDztWXgbCgL8Oeimn3i3qd0bE`)).data;
              fs.writeFileSync(folderthumnail, Buffer.from(getthumnail, 'utf-8'));
              imgthumnail.push(fs.createReadStream(__dirname + `/cache/${numb}.png`));
                let channel = datac.items[0].snippet.channelTitle;
              num = num+=1
  if (num == 1) var num1 = "üêß ‚ìµ "
  if (num == 2) var num1 = "üêß ‚ì∂ "
  if (num == 3) var num1 = "üêß ‚ì∑ "
  if (num == 4) var num1 = "üêß ‚ì∏ "
  if (num == 5) var num1 = "üêß ‚ìπ "
  if (num == 6) var num1 = "üêß ‚ì∫ "
              msg += (`${num1} ${value.title}\n[‚è∞] ùêìùê¢ùê¶ùêû: ${value.length.simpleText}\n[üìª] ùêäùêûÃÇùêßùê°: ${channel}\n---------------------------\n`);
            }
            var body = `‚ûù [ü¶ñ]ùêÇùê®ÃÅ ${link.length} ùêùùêöùêßùê° ùê¨ùêöÃÅùêúùê° ùê≠ùê´ùêÆÃÄùêßùê† ùêØùê®ÃõÃÅùê¢ ùê≠ùêÆÃõÃÄ ùê§ùê°ùê®ùêöÃÅ ùê≠ùê¢ÃÄùê¶ ùê§ùê¢ùêûÃÇÃÅùê¶ ùêúùêÆÃâùêö ùêõùêöÃ£ùêß:\n\n${msg}\n‚ûù ùêáùêöÃÉùê≤ ùê´ùêûùê©ùê•ùê≤ (ùê©ùê°ùêöÃâùêß ùê°ùê®ÃÇÃÄùê¢ ùê≠ùê°ùêûùê® ùê¨ùê®ÃÇÃÅ ùê≠ùê°ùêÆÃõÃÅ ùê≠ùêÆÃõÃ£) ùêúùê°ùê®Ã£ùêß ùê¶ùê®Ã£ÃÇùê≠ ùê≠ùê´ùê®ùêßùê† ùêßùê°ùêÆÃõÃÉùêßùê† ùê≠ùê¢ÃÄùê¶ ùê§ùê¢ùêûÃÇÃÅùê¶ ùê≠ùê´ùêûÃÇùêß`
            return api.sendMessage({
              attachment: imgthumnail,
              body: body
            }, event.threadID, (error, info) => global.client.handleReply.push({
              type: 'reply',
              name: this.config.name,
              messageID: info.messageID,
              author: event.senderID,
              link
            }), event.messageID);
          } catch(e) {
            return api.sendMessage('ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i trong gi√¢y l√°t!!\n' + e, event.threadID, event.messageID);
        }
    }
              }
